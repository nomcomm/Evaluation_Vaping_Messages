df_total  %>% filter(df_total$recruitment_platform == "SONA")
table(df_total_sona$Experimental_Group)
mean(df_total_sona$Age, na.rm=TRUE)
sd(df_total_sona$Age, na.rm=TRUE)
table(df_total_sona$Sex) / length(df_total_sona$Sex)
# Mixed Effects
df_total_AI_3EPs <- df_total[c(1:2, 155:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot$recruitment_platform <- as.factor(df_total_AI_3EPs_pivot$recruitment_platform)
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot)
summary(EP_Mixed_Effects)
#ordinal regression
colnames(df_total)
df_total_rank <- df_total[c(1:2, 5:34, 155)]
df_total_rank_pivot <- df_total_rank |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Rank")
df_total_rank_pivot$Messages <- sub("Rank_", "", df_total_rank_pivot$Messages)
df_total_rank_pivot <- df_total_rank_pivot |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_rank_pivot$Rank <- factor(df_total_rank_pivot$Rank)
df_total_rank_pivot$Rank <- ordered(df_total_rank_pivot$Rank)
df_total_rank_pivot$AI_or_Hum <- factor(df_total_rank_pivot$AI_or_Hum)
df_total_rank_pivot$Experimental_Group <- factor(df_total_rank_pivot$Experimental_Group)
df_total_rank_pivot$Experimental_Group <- relevel(df_total_rank_pivot$Experimental_Group, ref = "Not Disclosed")
ordinal_reg <- clmm(Rank ~ Experimental_Group*AI_or_Hum + (1|Participant) + (1|Messages), link="logit", data = df_total_rank_pivot)
summary(ordinal_reg_prolific)
summary(ordinal_reg)
emmeans(ordinal_reg_prolific, ~ Experimental_Group*AI_or_Hum, mode = "mean.class")
emmeans(ordinal_reg, ~ Experimental_Group*AI_or_Hum, mode = "mean.class")
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
library(lmerTest)
library(lme4)
library(ordinal)
library(emmeans)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
colnames(df_total)
#demographics
df_total_prolific <-
df_total  %>% filter(df_total$recruitment_platform == "Prolific")
table(df_total_prolific$Experimental_Group)
mean(df_total_prolific$Age, na.rm=TRUE)
sd(df_total_prolific$Age, na.rm=TRUE)
table(df_total_prolific$Sex) / length(df_total_prolific$Sex)
mean(df_total_prolific$EP, na.rm=TRUE)
df_total_sona <-
df_total  %>% filter(df_total$recruitment_platform == "SONA")
table(df_total_sona$Experimental_Group)
mean(df_total_sona$Age, na.rm=TRUE)
sd(df_total_sona$Age, na.rm=TRUE)
table(df_total_sona$Sex) / length(df_total_sona$Sex)
# Mixed Effects
df_total_AI_3EPs <- df_total[c(1:2, 155:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot$recruitment_platform <- as.factor(df_total_AI_3EPs_pivot$recruitment_platform)
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot)
summary(EP_Mixed_Effects)
EP_predict <-
emmeans(EP_Mixed_Effects, ~ Experimental_Group * AI_or_Hum)
EP_predict_df <- as.data.frame(EP_predict)
ggplot(EP_predict_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.LCL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
emmeans(EP_Mixed_Effects, pairwise~Experimental_Group*AI_or_Hum, adjust="tukey")
df_total_AI_3EPs_pivot_prolific <-
df_total_AI_3EPs_pivot %>%
filter(df_total_AI_3EPs_pivot$recruitment_platform == "Prolific")
EP_Mixed_Effects_prolific <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot_prolific)
summary(EP_Mixed_Effects_prolific)
EP_predict_prolific <-
emmeans(EP_Mixed_Effects_prolific, ~ Experimental_Group * AI_or_Hum)
EP_predict_prolific_df <- as.data.frame(EP_predict_prolific)
ggplot(EP_predict_prolific_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = lower.CL, ymax = upper.CL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
df_total_AI_3EPs_pivot_sona <-
df_total_AI_3EPs_pivot %>%
filter(df_total_AI_3EPs_pivot$recruitment_platform == "SONA")
EP_Mixed_Effects_sona <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot_sona)
summary(EP_Mixed_Effects_sona)
EP_predict_sona <-
emmeans(EP_Mixed_Effects_sona, ~ Experimental_Group * AI_or_Hum)
EP_predict_sona_df <- as.data.frame(EP_predict_sona)
ggplot(EP_predict_sona_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = lower.CL, ymax = upper.CL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
emmeans(EP_Mixed_Effects_sona, pairwise~Experimental_Group*AI_or_Hum, adjust="tukey")
#ordinal regression
colnames(df_total)
df_total_rank <- df_total[c(1:2, 5:34, 155)]
df_total_rank_pivot <- df_total_rank |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Rank")
df_total_rank_pivot_sona <-
df_total_rank_pivot |>
filter(df_total_rank_pivot$recruitment_platform == "SONA")
ordinal_reg_sona <- clmm(Rank ~ Experimental_Group*AI_or_Hum + (1|Messages), link="logit", data = df_total_rank_pivot_sona)
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
library(lmerTest)
library(lme4)
library(ordinal)
library(emmeans)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
colnames(df_total)
#demographics
df_total_prolific <-
df_total  %>% filter(df_total$recruitment_platform == "Prolific")
table(df_total_prolific$Experimental_Group)
mean(df_total_prolific$Age, na.rm=TRUE)
sd(df_total_prolific$Age, na.rm=TRUE)
table(df_total_prolific$Sex) / length(df_total_prolific$Sex)
mean(df_total_prolific$EP, na.rm=TRUE)
df_total_sona <-
df_total  %>% filter(df_total$recruitment_platform == "SONA")
table(df_total_sona$Experimental_Group)
mean(df_total_sona$Age, na.rm=TRUE)
sd(df_total_sona$Age, na.rm=TRUE)
table(df_total_sona$Sex) / length(df_total_sona$Sex)
# Mixed Effects
df_total_AI_3EPs <- df_total[c(1:2, 155:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot$recruitment_platform <- as.factor(df_total_AI_3EPs_pivot$recruitment_platform)
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot)
summary(EP_Mixed_Effects)
EP_predict <-
emmeans(EP_Mixed_Effects, ~ Experimental_Group * AI_or_Hum)
EP_predict_df <- as.data.frame(EP_predict)
ggplot(EP_predict_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.LCL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
emmeans(EP_Mixed_Effects, pairwise~Experimental_Group*AI_or_Hum, adjust="tukey")
df_total_AI_3EPs_pivot_prolific <-
df_total_AI_3EPs_pivot %>%
filter(df_total_AI_3EPs_pivot$recruitment_platform == "Prolific")
EP_Mixed_Effects_prolific <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot_prolific)
summary(EP_Mixed_Effects_prolific)
EP_predict_prolific <-
emmeans(EP_Mixed_Effects_prolific, ~ Experimental_Group * AI_or_Hum)
EP_predict_prolific_df <- as.data.frame(EP_predict_prolific)
ggplot(EP_predict_prolific_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = lower.CL, ymax = upper.CL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
df_total_AI_3EPs_pivot_sona <-
df_total_AI_3EPs_pivot %>%
filter(df_total_AI_3EPs_pivot$recruitment_platform == "SONA")
EP_Mixed_Effects_sona <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot_sona)
summary(EP_Mixed_Effects_sona)
EP_predict_sona <-
emmeans(EP_Mixed_Effects_sona, ~ Experimental_Group * AI_or_Hum)
EP_predict_sona_df <- as.data.frame(EP_predict_sona)
ggplot(EP_predict_sona_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = lower.CL, ymax = upper.CL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
emmeans(EP_Mixed_Effects_sona, pairwise~Experimental_Group*AI_or_Hum, adjust="tukey")
#ordinal regression
colnames(df_total)
df_total_rank <- df_total[c(1:2, 5:34, 155)]
df_total_rank_pivot <- df_total_rank |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Rank")
df_total_rank_pivot$Messages <- sub("Rank_", "", df_total_rank_pivot$Messages)
df_total_rank_pivot <- df_total_rank_pivot |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_rank_pivot$Rank <- factor(df_total_rank_pivot$Rank)
df_total_rank_pivot$Rank <- ordered(df_total_rank_pivot$Rank)
df_total_rank_pivot$AI_or_Hum <- factor(df_total_rank_pivot$AI_or_Hum)
df_total_rank_pivot$Experimental_Group <- factor(df_total_rank_pivot$Experimental_Group)
df_total_rank_pivot$Experimental_Group <- relevel(df_total_rank_pivot$Experimental_Group, ref = "Not Disclosed")
ordinal_reg <- clmm(Rank ~ Experimental_Group*AI_or_Hum + (1|Participant) + (1|Messages), link="logit", data = df_total_rank_pivot)
summary(ordinal_reg)
emmeans(ordinal_reg, ~ Experimental_Group*AI_or_Hum, mode = "mean.class")
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(lmerTest)
library(lme4)
library(emmeans)
library(readr)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study2")
df_total <- read_csv('02_cleaned_data_file/study2_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Perception of AI variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
df_total$AIper_neg <-
(df_total$Per_AI3_1 + df_total$Per_AI6_1 + df_total$Per_AI8_1 + df_total$Per_AI9_1 +
df_total$Per_AI10_1 + df_total$Per_AI15_1 + df_total$Per_AI19_1 + df_total$Per_AI20_1)/8
AI_Message_Count <-
df_total[, c("Message1", "Message2", "Message3", "Message4", "Message5")] <= 15
df_total$AI_Message_Count <- rowSums(AI_Message_Count)
df_total <- df_total |> relocate(AI_Message_Count, .after = Message5)
colnames(df_total)
# Mixed ANOVA
df_total_3EPs <- df_total[c(1:2, 122:137, 139:153, 155)]
df_total_3EPs_pivot <- df_total_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, AIper_neg, recruitment_platform), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_3EPs_pivot$Participant <- factor(df_total_3EPs_pivot$Participant)
df_total_3EPs_pivot$Experimental_Group <- factor(df_total_3EPs_pivot$Experimental_Group)
df_total_3EPs_pivot$AI_or_Hum <- factor(df_total_3EPs_pivot$AI_or_Hum)
df_total_3EPs_pivot$Experimental_Group <- relevel(df_total_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_3EPs_pivot$AI_or_Hum <- relevel(df_total_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_3EPs_pivot$Messages <- factor(df_total_3EPs_pivot$Messages)
df_total_3EPs_pivot_prolific <-
df_total_3EPs_pivot |>
filter(df_total_3EPs_pivot$recruitment_platform == "Prolific")
total_EP3_ANOVA_prolific <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum*AIper_neg + (1 | Participant) + (1 | Messages), data = df_total_3EPs_pivot_prolific)
summary(total_EP3_ANOVA_prolific)
##calculate pairwise comparison and estimated marginal means for data visualization
predict_mean_prolific <-
emmeans(total_EP3_ANOVA_prolific, ~ Experimental_Group * AI_or_Hum * AIper_neg, at = list(AIper_neg = c(1, 2, 3, 4, 5)))
predict_mean_prolific_df <- as.data.frame(predict_mean_prolific)
ggplot(predict_mean_prolific_df, aes(x = AIper_neg, y = emmean, color = AI_or_Hum)) +
geom_line(size = 1.25) +
facet_wrap(~Experimental_Group) +
labs(x = "Mean Negative Attitudes Towards AI", y = "Effects Perception", color = "Message Source") +
theme_bw() +
scale_colour_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
ylim(1,5)
df_total_3EPs_pivot_sona <-
df_total_3EPs_pivot |>
filter(df_total_3EPs_pivot$recruitment_platform == "SONA")
total_EP3_ANOVA_sona <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum*AIper_neg + (1 | Participant) + (1 | Messages), data = df_total_3EPs_pivot_sona)
summary(total_EP3_ANOVA_sona)
predict_mean_sona <-
emmeans(total_EP3_ANOVA_sona, ~ Experimental_Group * AI_or_Hum * AIper_neg, at = list(AIper_neg = c(1, 2, 3, 4, 5)))
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
library(lmerTest)
library(lme4)
library(ordinal)
library(emmeans)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
#demographics
df_total_prolific <-
df_total  %>% filter(df_total$recruitment_platform == "Prolific")
table(df_total_prolific$Experimental_Group)
mean(df_total_prolific$Age, na.rm=TRUE)
sd(df_total_prolific$Age, na.rm=TRUE)
table(df_total_prolific$Sex) / length(df_total_prolific$Sex)
mean(df_total_prolific$EP, na.rm=TRUE)
df_total_sona <-
df_total  %>% filter(df_total$recruitment_platform == "SONA")
table(df_total_sona$Experimental_Group)
mean(df_total_sona$Age, na.rm=TRUE)
sd(df_total_sona$Age, na.rm=TRUE)
table(df_total_sona$Sex) / length(df_total_sona$Sex)
# Mixed Effects
df_total_AI_3EPs <- df_total[c(1:2, 155:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot$recruitment_platform <- as.factor(df_total_AI_3EPs_pivot$recruitment_platform)
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 | Participant) + (1 | Messages), data = df_total_AI_3EPs_pivot)
summary(EP_Mixed_Effects)
EP_predict <-
emmeans(EP_Mixed_Effects, ~ Experimental_Group * AI_or_Hum)
EP_predict_df <- as.data.frame(EP_predict)
ggplot(EP_predict_df, aes(x = AI_or_Hum, y = emmean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9), size=3) +
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.LCL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
labs(y = "Effects Perception",
x = NULL) +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none") +   ylim(3,5)
emmeans(EP_Mixed_Effects, pairwise~Experimental_Group*AI_or_Hum, adjust="tukey")
