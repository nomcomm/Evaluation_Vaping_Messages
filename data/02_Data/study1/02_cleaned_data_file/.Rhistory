library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
setwd("/Users/suelim/Documents/Research/Evaluation_Vaping_Messages/data/02_Data/Study 1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
df_total$Age <- as.numeric(df_total$Age)
rm(list = ls())
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
#set directory and load file
setwd("/Users/suelim/Documents/Research/Evaluation_Vaping_Messages/data/02_Data/Study 1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
nrow(df_total)
table(df_total$Sex)
84/142
table(data$gender) / length(data$gender)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Ranking_AI <- 0
sum_Ranking_Human <- 0
for (i in 1:15) {
sum_Ranking_AI <- sum_Ranking_AI + df_total[[paste0("Ranking_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Ranking_AI / 15
for (i in 1:15) {
sum_Ranking_Human <- sum_Ranking_Human + df_total[[paste0("Ranking_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Ranking_Human / 15
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
#set directory and load file
setwd("/Users/suelim/Documents/Research/Evaluation_Vaping_Messages/data/02_Data/Study 1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
nrow(df_total)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
rm(list = ls())
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
#set directory and load file
setwd("/Users/suelim/Documents/Research/Evaluation_Vaping_Messages/data/02_Data/Study 1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
nrow(df_total)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
# Mixed ANOVA
colnames(df_total)
# Mixed ANOVA
df_total_AI_3EPs <- df_total[c(1:2, 170, 186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot
str(df_total_AI_3EPs_pivot)
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
ez::ezANOVA(
data = df_total_AI_3EPs_pivot,
wid = .(Participant),
within = .(AI_or_Hum),
between = .(Experimental_Group),
dv = .(Effects_Perception),
type = 3
)
##Data visualization
means_CI <-
df_total_AI_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Effects_Perception, type = "mean_ci") %>%
mutate(
lower_CI = mean - ci,
upper_CI = mean + ci
)
ggplot(means_CI, aes(x = AI_or_Hum, y = mean)) +
geom_line(aes(group = Experimental_Group), position = position_dodge(0.9), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.9)) +
geom_errorbar(
aes(ymin = lower_CI, ymax = upper_CI, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.9)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Experimental_Group) +
ylim(3,5) +
labs(y = "Effects Perception",
x = "Message Source") +
theme_bw() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
theme(legend.position = "none")
##Post-hoc t-tests
means <-
df_total_AI_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
means
df_total_AI_3EPs_pivot_AI <- df_total_AI_3EPs_pivot %>% filter(AI_or_Hum == "AI")
df_total_AI_3EPs_pivot_AI
df_total_AI_3EPs_pivot_Hum <- df_total_AI_3EPs_pivot %>% filter(AI_or_Hum == "Human")
df_total_AI_3EPs_pivot_Hum
t.test(Effects_Perception ~ Experimental_Group, data = df_total_AI_3EPs_pivot_AI)
t.test(Effects_Perception ~ Experimental_Group, data = df_total_AI_3EPs_pivot_Hum)
#Wilcoxon Rank Sum Analysis
df_total_KrusWall <- df_total[c("Experimental_Group", "Participant", "AI_MSG_Rank_mean", "Hum_MSG_Rank_mean")]
df_total_KrusWall_pivot <-
df_total_KrusWall |>
pivot_longer(!c(Experimental_Group, Participant), names_to="AI_or_Hum", values_to="Rank")
df_total_KrusWall_pivot$Experimental_Group <-
factor(df_total_KrusWall_pivot$Experimental_Group, levels = c("Not Disclosed", "Disclosed"))
df_total_KrusWall$rankdiff <-
df_total_KrusWall$AI_MSG_Rank_mean - df_total_KrusWall$Hum_MSG_Rank_mean
group_by(df_total_KrusWall, Experimental_Group) %>%
dplyr::summarise(
count = n(),
mean = mean(rankdiff, na.rm = TRUE),
sd = sd(rankdiff, na.rm = TRUE),
median = median(rankdiff, na.rm = TRUE),
IQR = IQR(rankdiff, na.rm = TRUE)
)
wilcox.test(rankdiff ~ Experimental_Group, data = df_total_KrusWall, exact=FALSE)
##Data visualization
df_total_KrusWall_pivot |>
ggplot(aes(x=AI_or_Hum, y=Rank, fill = AI_or_Hum)) +
geom_boxplot() +
theme(
plot.title = element_text(size=15,hjust=0.5),
axis.title.y=element_text(size=11,hjust=0.5)
) +
xlab("") +
ylim(0,25) +
labs(fill = "Source", y= "Preference Rank (1 = Best, 30 = Worse)") +
scale_x_discrete(labels=c(AI_MSG_Rank_mean = "AI", Hum_MSG_Rank_mean = "Human")) +
facet_wrap(~Experimental_Group) +
scale_fill_manual(values = c("AI_MSG_Rank_mean" = "steelblue", "Hum_MSG_Rank_mean" = "darkgreen")) +
theme_bw() +
theme(legend.position = "none")
