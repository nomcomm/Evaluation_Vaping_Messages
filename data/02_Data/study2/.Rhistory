df_total_3EPs_pivot$AI_or_Hum <- as.factor(df_total_3EPs_pivot$AI_or_Hum)
df_total_3EPs_pivot$Experimental_Group <- relevel(df_total_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_3EPs_pivot$AI_or_Hum <- relevel(df_total_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_3EPs_pivot$Messages <- factor(df_total_3EPs_pivot$Messages)
df_total_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum, AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
df_total_3EPs_pivot %>%
group_by(AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1| Participant), data = df_total_3EPs_pivot)
summary(total_EP3_ANOVA)
performance(total_EP3_ANOVA)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1| Participant) + (1| Messages), data = df_total_3EPs_pivot)
summary(total_EP3_ANOVA2 )
total_EP3_ANOVA3 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1+ AI_or_Hum| Participant), data = df_total_3EPs_pivot)
lrtest(total_EP3_ANOVA2, total_EP3_ANOVA3)
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1+AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1+AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 | Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 | Participant), data = df_total_3EPs_pivot)
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 | Participant) + (1 | Messages), data = df_total_3EPs_pivot)
summary(total_EP3_ANOVA2)
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Not Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Not Disclosed", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA2, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Disclosed", AIper_neg_level = "More Negative Attitudes Towards AI")))
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + Experimental_Group + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1| Participant), data = df_total_3EPs_pivot)
summary(total_EP3_ANOVA)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + Experimental_Group+ AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
total_EP3_ANOVA3 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + Experimental_Group + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA3)
lrtest(total_EP3_ANOVA2, total_EP3_ANOVA3)
#mixed effects modeling
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA2)
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA)
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
library(lmerTest)
library(lmtest)
library(lme4)
library(ordinal)
library(emmeans)
library(performance)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
# Mixed ANOVA
df_total_AI_3EPs <- df_total[c(1:2, 156:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Effects_Perception, type = "mean_ci")
#EP_Mixed_Effects <-
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 + AI_or_Hum | Participant), data = df_total_AI_3EPs_pivot)
summary(EP_Mixed_Effects)
performance(EP_Mixed_Effects)
EP_predict <-
emmeans(EP_Mixed_Effects, ~ Experimental_Group * AI_or_Hum)
EP_predict_df <- as.data.frame(EP_predict)
ggplot(EP_predict_df, aes(x = Experimental_Group, y = emmean)) +
geom_line(aes(group = AI_or_Hum), position = position_dodge(0.3), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.3), size=3) +
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.UCL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.3)
) +
theme(plot.title = element_text(hjust = 0.5)) +
#facet_wrap(~Experimental_Group) +
labs(
y = "Effects Perception",
x = NULL,
color = "Message Source"  # This line changes the legend title
) +
theme_classic() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
ylim(3.5, 5)
pairs(emmeans(EP_Mixed_Effects, ~Experimental_Group*AI_or_Hum, at = list(AI_or_Hum = "AI")))
pairs(emmeans(EP_Mixed_Effects, ~Experimental_Group*AI_or_Hum, at = list(AI_or_Hum = "Human")))
pairs(emmeans(EP_Mixed_Effects, ~Experimental_Group*AI_or_Hum, at = list(Experimental_Group = "Not Disclosed")))
pairs(emmeans(EP_Mixed_Effects, ~Experimental_Group*AI_or_Hum, at = list(Experimental_Group = "Disclosed")))
#Mixed-Effects Ordinal Regression
df_total_rank <- df_total[c(1:2, 5:34, 155)]
df_total_rank_pivot <- df_total_rank |>
pivot_longer(!c(Experimental_Group, Participant, recruitment_platform), names_to="Messages",
values_to="Rank")
df_total_rank_pivot$Messages <- sub("Rank_", "", df_total_rank_pivot$Messages)
df_total_rank_pivot <- df_total_rank_pivot |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_rank_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Rank, type = "mean_sd")
df_total_rank_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Rank, type = "full")
performance(EP_Mixed_Effects)
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(lmerTest)
library(lme4)
library(emmeans)
library(readr)
library(performance)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study2")
df_total <- read_csv('02_cleaned_data_file/study2_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Perception of AI variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
df_total$AIper_neg <-
(df_total$Per_AI3_1 + df_total$Per_AI6_1 + df_total$Per_AI8_1 + df_total$Per_AI9_1 +
df_total$Per_AI10_1 + df_total$Per_AI15_1 + df_total$Per_AI19_1 + df_total$Per_AI20_1)/8
mean(df_total$AIper_neg, na.rm=TRUE)
sd(df_total$AIper_neg, na.rm=TRUE)
hist(df_total$AIper_neg)
AIper_neg_median_value <- median(df_total$AIper_neg, na.rm = TRUE)
df_total$AIper_neg_level <- ifelse(df_total$AIper_neg >= AIper_neg_median_value, 'More Negative Attitudes Towards AI', 'Less Negative Attitudes Towards AI')
df_total$AIper_neg_level <- as.factor(df_total$AIper_neg_level)
AI_Message_Count <-
df_total[, c("Message1", "Message2", "Message3", "Message4", "Message5")] <= 15
df_total$AI_Message_Count <- rowSums(AI_Message_Count)
df_total <- df_total |> relocate(AI_Message_Count, .after = Message5)
# Restructing data structure
df_total_3EPs <- df_total[c(1:2, 123:137, 139:153, 156)]
df_total_3EPs_pivot <- df_total_3EPs |>
pivot_longer(!c(Experimental_Group, Participant, AIper_neg_level), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_3EPs_pivot$Participant <- as.factor(df_total_3EPs_pivot$Participant)
df_total_3EPs_pivot$Experimental_Group <- factor(df_total_3EPs_pivot$Experimental_Group)
df_total_3EPs_pivot$AI_or_Hum <- as.factor(df_total_3EPs_pivot$AI_or_Hum)
df_total_3EPs_pivot$Experimental_Group <- relevel(df_total_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_3EPs_pivot$AI_or_Hum <- relevel(df_total_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_3EPs_pivot$Messages <- factor(df_total_3EPs_pivot$Messages)
df_total_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum, AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
df_total_3EPs_pivot %>%
group_by(AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA)
summary(total_EP3_ANOVA)
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA)
total_EP3_ANOVA2 <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 | Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
anova(total_EP3_ANOVA2, total_EP3_ANOVA)
#mixed effects modeling
total_EP3_ANOVA <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum * AIper_neg_level + (1 + AI_or_Hum| Participant), data = df_total_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(total_EP3_ANOVA)
performance(total_EP3_ANOVA)
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(WebPower)
library(readr)
library(lmerTest)
library(lmtest)
library(lme4)
library(ordinal)
library(emmeans)
library(performance)
#power analysis for mixed ANOVA
wp.rmanova(ng = 2, nm = 2, f = 0.25, nscor = 1, alpha = 0.05, power = .8, type = 2)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study1/02_cleaned_data_file")
df_total <- read_csv('study1_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Ranking variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
sum_Rank_AI <- 0
sum_Rank_Human <- 0
for (i in 1:15) {
sum_Rank_AI <- sum_Rank_AI + df_total[[paste0("Rank_AI", i)]]
}
df_total$AI_MSG_Rank_mean <- sum_Rank_AI / 15
for (i in 1:15) {
sum_Rank_Human <- sum_Rank_Human + df_total[[paste0("Rank_Human", i)]]
}
df_total$Hum_MSG_Rank_mean <- sum_Rank_Human / 15
# Mixed ANOVA
df_total_AI_3EPs <- df_total[c(1:2, 156:170, 172:186)]
df_total_AI_3EPs_pivot <- df_total_AI_3EPs |>
pivot_longer(!c(Experimental_Group, Participant), names_to="Messages",
values_to="Effects_Perception") |>
mutate(AI_or_Hum = ifelse(grepl("^AI", Messages), "AI", "Human"))
df_total_AI_3EPs_pivot$AI_or_Hum <- as.factor(df_total_AI_3EPs_pivot$AI_or_Hum)
df_total_AI_3EPs_pivot$AI_or_Hum <- relevel(df_total_AI_3EPs_pivot$AI_or_Hum, ref = "AI")
df_total_AI_3EPs_pivot$Participant <- as.factor(df_total_AI_3EPs_pivot$Participant)
df_total_AI_3EPs_pivot$Experimental_Group <- as.factor(df_total_AI_3EPs_pivot$Experimental_Group)
df_total_AI_3EPs_pivot$Experimental_Group <- relevel(df_total_AI_3EPs_pivot$Experimental_Group, ref = "Not Disclosed")
df_total_AI_3EPs_pivot$Messages <- as.factor(df_total_AI_3EPs_pivot$Messages)
df_total_AI_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum) %>%
get_summary_stats(Effects_Perception, type = "mean_ci")
#EP_Mixed_Effects <-
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 + AI_or_Hum | Participant), data = df_total_AI_3EPs_pivot)
#EP_Mixed_Effects <-
EP_Mixed_Effects <-
lmer(Effects_Perception ~ Experimental_Group * AI_or_Hum + (1 + AI_or_Hum | Participant), data = df_total_AI_3EPs_pivot, control = lmerControl(optimizer = "bobyqa"))
summary(EP_Mixed_Effects)
performance(EP_Mixed_Effects)
summary(total_EP3_ANOVA)
performance(total_EP3_ANOVA)
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Not Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Not Disclosed", AIper_neg_level = "More Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Disclosed", AIper_neg_level = "More Negative Attitudes Towards AI")))
ggplot(predict_mean_df, aes(x = Experimental_Group, y = emmean)) +
geom_line(aes(group = AI_or_Hum), position = position_dodge(0.3), color="dimgray") +
geom_point(aes(color = AI_or_Hum), position = position_dodge(0.3), size=3) +
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.UCL, color = AI_or_Hum),
width = 0.2,
position = position_dodge(0.3)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~AIper_neg_level) +
labs(
y = "Effects Perception",
x = NULL,
color = "Message Source"  # This line changes the legend title
) +
theme_classic() +
scale_color_manual(values = c("AI" = "steelblue", "Human" = "darkgreen")) +
ylim(3, 5)
summary(total_EP3_ANOVA)
performance(total_EP3_ANOVA)
summary(total_EP3_ANOVA)
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", Experimental_Group = "Not Disclosed")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", Experimental_Group = "Not Disclosed")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", Experimental_Group = "Disclosed")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", Experimental_Group = "Disclosed")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "AI", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Not Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(AI_or_Hum = "Human", AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(total_EP3_ANOVA, ~ Experimental_Group * AI_or_Hum * AIper_neg_level, at = list(Experimental_Group = "Disclosed", AIper_neg_level = "Less Negative Attitudes Towards AI")))
#Poisson regression of number of AI-generated messages selected
colnames(df_total)
df_total_MS <- df_total[c(1:2, 11, 156)]
df_total_MS$Experimental_Group <- as.factor(df_total_MS$Experimental_Group)
df_total_MS$Experimental_Group <- relevel(df_total_MS$Experimental_Group, ref = "Not Disclosed")
df_total_MS %>%
group_by(Experimental_Group, AIper_neg_level) %>%
get_summary_stats(AI_Message_Count, type = "mean_sd")
message_preference <-
glm(AI_Message_Count ~ Experimental_Group * AIper_neg_level, data = df_total_MS, family = poisson(link = "log"))
summary(message_preference)
performance(message_preference)
predict_count <-
emmeans(message_preference, ~ Experimental_Group * AIper_neg_level)
predict_count_regrid <- regrid(predict_count, transform = "response")
predict_count_df <- as.data.frame(predict_count_regrid)
ggplot(predict_count_df, aes(x = Experimental_Group, y = rate)) +
geom_point(position = position_dodge(0.3), size=3) +
geom_line(aes(group = AIper_neg_level))+
geom_errorbar(
aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2,
position = position_dodge(0.3)
) +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~AIper_neg_level) +
labs(
y = "Predicted # of AI-Generated Messages Selected",
x = NULL
) +
theme_classic() +
ylim(0, 5)
pairs(emmeans(message_preference, ~ Experimental_Group * AIper_neg_level, regrid = "response", at = list(AIper_neg_level = "Less Negative Attitudes Towards AI")))
pairs(emmeans(message_preference, ~ Experimental_Group * AIper_neg_level, regrid = "response", at = list(AIper_neg_level = "More Negative Attitudes Towards AI")))
#Poisson regression of number of AI-generated messages selected
colnames(df_total)
df_total_MS <- df_total[c(1:2, 11, 156)]
df_total_MS$Experimental_Group <- as.factor(df_total_MS$Experimental_Group)
df_total_MS$Experimental_Group <- relevel(df_total_MS$Experimental_Group, ref = "Not Disclosed")
df_total_MS %>%
group_by(Experimental_Group, AIper_neg_level) %>%
get_summary_stats(AI_Message_Count, type = "mean_sd")
df_total_3EPs_pivot %>%
group_by(Experimental_Group, AI_or_Hum, AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
df_total_3EPs_pivot %>%
group_by(AIper_neg_level) %>%
get_summary_stats(Effects_Perception, type = "mean_sd")
df_total %>%
group_by(Experimental_Conditions) %>%
get_summary_stats(AIper_neg, type="full")
df_total %>%
group_by(Experimental_Group) %>%
get_summary_stats(AIper_neg, type="full")
df_total %>%
group_by(Experimental_Group) %>%
get_summary_stats(AIper_neg, type="full")
#creating Effects Perception (EP) and Perception of AI variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
library(tidyr)
library(ggplot2)
library(dplyr)
library(rstatix)
library(lmerTest)
library(lme4)
library(emmeans)
library(readr)
library(performance)
#set directory and load file
setwd("/Users/suelim/Documents/Research/DONE/Evaluation_Vaping_Messages/github/Evaluation_Vaping_Messages/data/02_Data/study2")
df_total <- read_csv('02_cleaned_data_file/study2_data_file.csv')
#demographics
table(df_total$Experimental_Group)
mean(df_total$Age, na.rm=TRUE)
sd(df_total$Age, na.rm=TRUE)
table(df_total$Sex) / length(df_total$Sex)
#creating Effects Perception (EP) and Perception of AI variables
sum_AI_EP <- 0
sum_Human_EP <- 0
for (i in 1:15) {
df_total[[paste0("AI", i, "_EP")]] <-
(df_total[[paste0("Dis_AI", i)]] + df_total[[paste0("Con_AI", i)]] +
df_total[[paste0("Unp_AI", i)]]) / 3
sum_AI_EP <- sum_AI_EP + df_total[[paste0("AI", i, "_EP")]]
}
df_total$AI_mean_EP <- sum_AI_EP / 15
for (i in 1:15) {
df_total[[paste0("Human", i, "_EP")]] <-
(df_total[[paste0("Dis_Hum", i)]] + df_total[[paste0("Con_Hum", i)]] +
df_total[[paste0("Unp_Hum", i)]]) / 3
sum_Human_EP <- sum_Human_EP + df_total[[paste0("Human", i, "_EP")]]
}
df_total$Human_mean_EP <- sum_Human_EP / 15
df_total$AIper_neg <-
(df_total$Per_AI3_1 + df_total$Per_AI6_1 + df_total$Per_AI8_1 + df_total$Per_AI9_1 +
df_total$Per_AI10_1 + df_total$Per_AI15_1 + df_total$Per_AI19_1 + df_total$Per_AI20_1)/8
mean(df_total$AIper_neg, na.rm=TRUE)
sd(df_total$AIper_neg, na.rm=TRUE)
hist(df_total$AIper_neg)
AIper_neg_median_value <- median(df_total$AIper_neg, na.rm = TRUE)
df_total$AIper_neg_level <- ifelse(df_total$AIper_neg >= AIper_neg_median_value, 'More Negative Attitudes Towards AI', 'Less Negative Attitudes Towards AI')
df_total$AIper_neg_level <- as.factor(df_total$AIper_neg_level)
AI_Message_Count <-
df_total[, c("Message1", "Message2", "Message3", "Message4", "Message5")] <= 15
df_total$AI_Message_Count <- rowSums(AI_Message_Count)
df_total <- df_total |> relocate(AI_Message_Count, .after = Message5)
df_total %>%
group_by(Experimental_Group) %>%
get_summary_stats(AIper_neg, type="full")
